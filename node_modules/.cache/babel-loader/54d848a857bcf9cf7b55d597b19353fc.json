{"ast":null,"code":"import consumer from \"./consumer\"; // turbolinks の読み込みが終わった後にidを取得しないと，エラーが出ます。\n\ndocument.addEventListener('turbolinks:load', function () {\n  // js.erb 内で使用できるように変数を定義しておく\n  window.messageContainer = document.getElementById('message-container'); // 以下のプログラムが他のページで動作しないようにしておく\n\n  if (messageContainer === null) {\n    return;\n  }\n\n  consumer.subscriptions.create(\"RoomChannel\", {\n    connected: function connected() {},\n    disconnected: function disconnected() {},\n    received: function received(data) {\n      // サーバー側から受け取ったHTMLを一番最後に加える\n      messageContainer.insertAdjacentHTML('beforeend', data['message']);\n    }\n  });\n  var documentElement = document.documentElement; // js.erb 内でも使用できるように変数を決定\n\n  window.messageContent = document.getElementById('message_content'); // 一番下まで移動する関数。js.erb 内でも使用できるように変数を決定\n\n  window.scrollToBottom = function () {\n    window.scroll(0, documentElement.scrollHeight);\n  }; // 最初にページ一番下へ移動させる\n\n\n  scrollToBottom(); // ********** 以下を追加 **********\n\n  var messageButton = document.getElementById('message-button'); // 空欄でなければボタンを有効化，空欄なら無効化する関数\n\n  var button_activation = function button_activation() {\n    if (messageContent.value === '') {\n      messageButton.classList.add('disabled');\n    } else {\n      messageButton.classList.remove('disabled');\n    }\n  }; // フォームに入力した際の動作\n\n\n  messageContent.addEventListener('input', function () {\n    button_activation();\n  }); // 送信ボタンが押された時にボタンを無効化\n\n  messageButton.addEventListener('click', function () {\n    messageButton.classList.add('disabled');\n  }); // ********** 以上を追加 **********\n});","map":{"version":3,"sources":["C:/Users/keisu/eclipse-workspace/chatApp_sample5/app/javascript/channels/room_channel.js"],"names":["consumer","document","addEventListener","window","messageContainer","getElementById","subscriptions","create","connected","disconnected","received","data","insertAdjacentHTML","documentElement","messageContent","scrollToBottom","scroll","scrollHeight","messageButton","button_activation","value","classList","add","remove"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB,C,CAEA;;AACAC,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,EAA6C,YAAM;AAE/C;AACAC,EAAAA,MAAM,CAACC,gBAAP,GAA0BH,QAAQ,CAACI,cAAT,CAAwB,mBAAxB,CAA1B,CAH+C,CAK/C;;AACA,MAAID,gBAAgB,KAAK,IAAzB,EAA+B;AAC3B;AACH;;AAEDJ,EAAAA,QAAQ,CAACM,aAAT,CAAuBC,MAAvB,CAA8B,aAA9B,EAA6C;AACzCC,IAAAA,SADyC,uBAC7B,CACX,CAFwC;AAIzCC,IAAAA,YAJyC,0BAI1B,CACd,CALwC;AAOzCC,IAAAA,QAPyC,oBAOhCC,IAPgC,EAO1B;AACX;AACAP,MAAAA,gBAAgB,CAACQ,kBAAjB,CAAoC,WAApC,EAAiDD,IAAI,CAAC,SAAD,CAArD;AACH;AAVwC,GAA7C;AAaC,MAAME,eAAe,GAAGZ,QAAQ,CAACY,eAAjC,CAvB8C,CAwB/C;;AACAV,EAAAA,MAAM,CAACW,cAAP,GAAwBb,QAAQ,CAACI,cAAT,CAAwB,iBAAxB,CAAxB,CAzB+C,CA0B/C;;AACAF,EAAAA,MAAM,CAACY,cAAP,GAAwB,YAAM;AAC1BZ,IAAAA,MAAM,CAACa,MAAP,CAAc,CAAd,EAAiBH,eAAe,CAACI,YAAjC;AACH,GAFD,CA3B+C,CA+B/C;;;AACAF,EAAAA,cAAc,GAhCiC,CAkC/C;;AACA,MAAMG,aAAa,GAAGjB,QAAQ,CAACI,cAAT,CAAwB,gBAAxB,CAAtB,CAnC+C,CAqC/C;;AACA,MAAMc,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,QAAIL,cAAc,CAACM,KAAf,KAAyB,EAA7B,EAAiC;AAC7BF,MAAAA,aAAa,CAACG,SAAd,CAAwBC,GAAxB,CAA4B,UAA5B;AACH,KAFD,MAEO;AACHJ,MAAAA,aAAa,CAACG,SAAd,CAAwBE,MAAxB,CAA+B,UAA/B;AACH;AACJ,GAND,CAtC+C,CA8C/C;;;AACAT,EAAAA,cAAc,CAACZ,gBAAf,CAAgC,OAAhC,EAAyC,YAAM;AAC3CiB,IAAAA,iBAAiB;AACpB,GAFD,EA/C+C,CAmD/C;;AACAD,EAAAA,aAAa,CAAChB,gBAAd,CAA+B,OAA/B,EAAwC,YAAM;AAC1CgB,IAAAA,aAAa,CAACG,SAAd,CAAwBC,GAAxB,CAA4B,UAA5B;AACH,GAFD,EApD+C,CAuD/C;AACH,CAxDD","sourcesContent":["import consumer from \"./consumer\"\n\n// turbolinks の読み込みが終わった後にidを取得しないと，エラーが出ます。\ndocument.addEventListener('turbolinks:load', () => {\n\n    // js.erb 内で使用できるように変数を定義しておく\n    window.messageContainer = document.getElementById('message-container')\n\n    // 以下のプログラムが他のページで動作しないようにしておく\n    if (messageContainer === null) {\n        return\n    }\n\n    consumer.subscriptions.create(\"RoomChannel\", {\n        connected() {\n        },\n\n        disconnected() {\n        },\n\n        received(data) {\n            // サーバー側から受け取ったHTMLを一番最後に加える\n            messageContainer.insertAdjacentHTML('beforeend', data['message'])\n        }\n    })\n    \n     const documentElement = document.documentElement\n    // js.erb 内でも使用できるように変数を決定\n    window.messageContent = document.getElementById('message_content')\n    // 一番下まで移動する関数。js.erb 内でも使用できるように変数を決定\n    window.scrollToBottom = () => {\n        window.scroll(0, documentElement.scrollHeight)\n    }\n\n    // 最初にページ一番下へ移動させる\n    scrollToBottom()\n    \n    // ********** 以下を追加 **********\n    const messageButton = document.getElementById('message-button')\n\n    // 空欄でなければボタンを有効化，空欄なら無効化する関数\n    const button_activation = () => {\n        if (messageContent.value === '') {\n            messageButton.classList.add('disabled')\n        } else {\n            messageButton.classList.remove('disabled')\n        }\n    }\n\n    // フォームに入力した際の動作\n    messageContent.addEventListener('input', () => {\n        button_activation()\n    })\n\n    // 送信ボタンが押された時にボタンを無効化\n    messageButton.addEventListener('click', () => {\n        messageButton.classList.add('disabled')\n    })\n    // ********** 以上を追加 **********\n})"]},"metadata":{},"sourceType":"module"}